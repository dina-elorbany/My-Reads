{"ast":null,"code":"var _jsxFileName = \"/Users/eng.dina/Documents/Work and Learning/Web-development/udacity/react-cross-skilling/MyReads-Project/build-version/My-Reads/starter/src/components/Shelves.js\";\nimport Shelf from './Shelf';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shelves = _ref => {\n  let {\n    books,\n    updateShelf,\n    convertToCamelCase,\n    shelvesArray,\n    shelvesOptions\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: shelvesArray.map(shelf => /*#__PURE__*/_jsxDEV(Shelf, {\n        title: shelf,\n        books: books,\n        shelvesOptions: shelvesOptions,\n        updateShelf: updateShelf,\n        convertToCamelCase: convertToCamelCase\n      }, shelf, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Shelves;\nShelves.propTypes = {\n  books: PropTypes.array.isRequired,\n  shelvesArray: PropTypes.array.isRequired,\n  shelvesOptions: PropTypes.array.isRequired,\n  updateShelf: PropTypes.func.isRequired,\n  convertToCamelCase: PropTypes.func.isRequired\n};\nexport default Shelves;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shelves\");","map":{"version":3,"names":["Shelf","PropTypes","Shelves","books","updateShelf","convertToCamelCase","shelvesArray","shelvesOptions","map","shelf","propTypes","array","isRequired","func"],"sources":["/Users/eng.dina/Documents/Work and Learning/Web-development/udacity/react-cross-skilling/MyReads-Project/build-version/My-Reads/starter/src/components/Shelves.js"],"sourcesContent":["import Shelf from './Shelf';\nimport PropTypes from 'prop-types';\n\nconst Shelves = ({\n  books,\n  updateShelf,\n  convertToCamelCase,\n  shelvesArray,\n  shelvesOptions,\n}) => {\n  return (\n    <div className='list-books-content'>\n      <div>\n        {shelvesArray.map(shelf => (\n          <Shelf\n            key={shelf}\n            title={shelf}\n            books={books}\n            shelvesOptions={shelvesOptions}\n            updateShelf={updateShelf}\n            convertToCamelCase={convertToCamelCase}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nShelves.propTypes = {\n  books: PropTypes.array.isRequired,\n  shelvesArray: PropTypes.array.isRequired,\n  shelvesOptions: PropTypes.array.isRequired,\n  updateShelf: PropTypes.func.isRequired,\n  convertToCamelCase: PropTypes.func.isRequired,\n};\n\nexport default Shelves;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,OAAO,GAAG,QAMV;EAAA,IANW;IACfC,KADe;IAEfC,WAFe;IAGfC,kBAHe;IAIfC,YAJe;IAKfC;EALe,CAMX;EACJ,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,uBACE;MAAA,UACGD,YAAY,CAACE,GAAb,CAAiBC,KAAK,iBACrB,QAAC,KAAD;QAEE,KAAK,EAAEA,KAFT;QAGE,KAAK,EAAEN,KAHT;QAIE,cAAc,EAAEI,cAJlB;QAKE,WAAW,EAAEH,WALf;QAME,kBAAkB,EAAEC;MANtB,GACOI,KADP;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAvBD;;KAAMP,O;AAyBNA,OAAO,CAACQ,SAAR,GAAoB;EAClBP,KAAK,EAAEF,SAAS,CAACU,KAAV,CAAgBC,UADL;EAElBN,YAAY,EAAEL,SAAS,CAACU,KAAV,CAAgBC,UAFZ;EAGlBL,cAAc,EAAEN,SAAS,CAACU,KAAV,CAAgBC,UAHd;EAIlBR,WAAW,EAAEH,SAAS,CAACY,IAAV,CAAeD,UAJV;EAKlBP,kBAAkB,EAAEJ,SAAS,CAACY,IAAV,CAAeD;AALjB,CAApB;AAQA,eAAeV,OAAf"},"metadata":{},"sourceType":"module"}