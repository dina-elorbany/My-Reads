{"ast":null,"code":"var _jsxFileName = \"/Users/eng.dina/Documents/Work and Learning/Web-development/udacity/react-cross-skilling/MyReads-Project/build-version/My-Reads/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Search from './views/Search';\nimport Home from './views/Home';\nimport { Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as BooksAPI from './apis/BooksAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [booksList, setBooksList] = useState([]);\n  const [searchResult, setSearchResult] = useState([]);\n  const shelvesArray = ['Currently Reading', 'Want to Read', 'Read'];\n  const shelvesOptions = ['Move to...', ...shelvesArray, 'None'];\n\n  const convertToCamelCase = title => {\n    const titleSplitToArray = title.split(' ').map(word => word[0].toUpperCase() + word.slice(1));\n    const titleCamelCase = titleSplitToArray.join('')[0].toLowerCase() + titleSplitToArray.join('').slice(1);\n    return titleCamelCase;\n  };\n\n  const getBooks = async () => {\n    const booksList = await BooksAPI.getAll();\n    return setBooksList(booksList);\n  };\n\n  useEffect(() => getBooks(), []);\n\n  const updateShelf = async (book, shelf) => {\n    await BooksAPI.update(book, shelf);\n    return getBooks();\n  };\n\n  const getBooksFromSearch = async query => {\n    try {\n      if (query !== '') {\n        const res = await BooksAPI.search(query);\n        const resWithShelf = res.map(bookSearch => {\n          booksList.forEach(book => bookSearch.id === book.id && (bookSearch.shelf = book.shelf));\n          return bookSearch;\n        });\n        setSearchResult(resWithShelf);\n        return setSearchResult(resWithShelf);\n      }\n\n      if (query === '') setSearchResult([]);\n    } catch (error) {\n      console.error('err ' + error.error);\n      setSearchResult([]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Home, {\n        shelvesArray: shelvesArray,\n        shelvesOptions: shelvesOptions,\n        booksList: booksList,\n        updateShelf: updateShelf,\n        convertToCamelCase: convertToCamelCase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search\",\n      element: /*#__PURE__*/_jsxDEV(Search, {\n        getBooksFromSearch: getBooksFromSearch,\n        searchResult: searchResult,\n        updateShelf: updateShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RxCSXBM+UD4VCWgCIZuN2uSQkYc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","Home","Route","Routes","useState","useEffect","BooksAPI","App","booksList","setBooksList","searchResult","setSearchResult","shelvesArray","shelvesOptions","convertToCamelCase","title","titleSplitToArray","split","map","word","toUpperCase","slice","titleCamelCase","join","toLowerCase","getBooks","getAll","updateShelf","book","shelf","update","getBooksFromSearch","query","res","search","resWithShelf","bookSearch","forEach","id","error","console"],"sources":["/Users/eng.dina/Documents/Work and Learning/Web-development/udacity/react-cross-skilling/MyReads-Project/build-version/My-Reads/starter/src/App.js"],"sourcesContent":["import './App.css';\nimport Search from './views/Search';\nimport Home from './views/Home';\nimport { Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport * as BooksAPI from './apis/BooksAPI';\n\nfunction App() {\n  const [booksList, setBooksList] = useState([]);\n  const [searchResult, setSearchResult] = useState([]);\n\n  const shelvesArray = ['Currently Reading', 'Want to Read', 'Read'];\n  const shelvesOptions = ['Move to...', ...shelvesArray, 'None'];\n\n  const convertToCamelCase = title => {\n    const titleSplitToArray = title\n      .split(' ')\n      .map(word => word[0].toUpperCase() + word.slice(1));\n    const titleCamelCase =\n      titleSplitToArray.join('')[0].toLowerCase() +\n      titleSplitToArray.join('').slice(1);\n    return titleCamelCase;\n  };\n\n  const getBooks = async () => {\n    const booksList = await BooksAPI.getAll();\n    return setBooksList(booksList);\n  };\n\n  useEffect(() => getBooks(), []);\n\n  const updateShelf = async (book, shelf) => {\n    await BooksAPI.update(book, shelf);\n    return getBooks();\n  };\n\n  const getBooksFromSearch = async query => {\n    try {\n      if (query !== '') {\n        const res = await BooksAPI.search(query);\n\n        const resWithShelf = res.map(bookSearch => {\n          booksList.forEach(\n            book => bookSearch.id === book.id && (bookSearch.shelf = book.shelf)\n          );\n          return bookSearch;\n        });\n        setSearchResult(resWithShelf);\n\n        return setSearchResult(resWithShelf);\n      }\n      if (query === '') setSearchResult([]);\n    } catch (error) {\n      console.error('err ' + error.error);\n      setSearchResult([]);\n    }\n  };\n\n  return (\n    <Routes className='app'>\n      <Route\n        exact\n        path='/'\n        element={\n          <Home\n            shelvesArray={shelvesArray}\n            shelvesOptions={shelvesOptions}\n            booksList={booksList}\n            updateShelf={updateShelf}\n            convertToCamelCase={convertToCamelCase}\n          />\n        }\n      />\n      <Route\n        path='/search'\n        element={\n          <Search\n            getBooksFromSearch={getBooksFromSearch}\n            searchResult={searchResult}\n            updateShelf={updateShelf}\n          />\n        }\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}